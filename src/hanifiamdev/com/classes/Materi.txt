================================================================================================================
============================================  Java Standard Classes ============================================
================================================================================================================

============================================  String Class ============================================
Seperti yang pernah dibahas di materi Java Dasar, String adalah object, artinya dia memiliki representasi class nya
Ada banyak sekali method yang bisa kita gunakan di String, kita bisa melihat detail method apa aja yang tersedia di halaman dokumentasi javadoc nya
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/lang/String.html

## Method di String Class ##
- String toLowerCase() => Membuat string baru dengan format lower case
- String toUpperCase() => Membuat string baru dengan format upper case
- int length()         => Mendapatkan panjang string
- boolean startsWith(value) => Mengecek apakah dimulai dengan string value
- boolean endWith(value)    => Mengecek apakah diakhiri dengan string value
- String[] split(value)     => Memotong string dengan string value

============================================  StringBuffer dan StringBuilder Class ============================================

## Immutable String ##
String adalah tipe data immutable, artinya tidak bisa berubah isinya, saat kita mengubah string, sebenernya yang dilakukan di java adalah membuat String baru
Jika kita ingin manipulasi String dalam jumlah banyak, sangat tidak disarankan menggunakan String,kareana akan memakan memory yang cukup besar, untuk kasus seperti ini tidak disarankan menggunakan String,
ksrena akan memakan memory yang cukkup besar, untuk kasus seperti ini, disarankan menggunakan StringBuffer atau StringBuilder

## StringBuffer vs StringBuilder
Kemampuan StringBuffer dan StringBuilder cukup sama, bisa digunakan untuk manipulasi String
Yang membedakan adalah, StringBuffer itu thread safe, sedangkan StringBuilder tidak thread safe
Jika kita ingin memanipulasi String secara paralel bersamaan, disarankan menggunakan StringBuffer, namun jika tidak butuh paralel, cukup gunakan StringBuilder
Karena StringBuffer dibuat agar thread safe, maka secara otomatis  performanya lebih lambat dibandingkan StringBuilder\
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/lang/StringBuffer.html

============================================  StringJoiner Class ============================================
StringJoiner adalah class yang bisa digunakan untuk membuat String squence yang dipisahkan dengan delimiter
StringJoiner juga mendukung prefix dan suffix jika kita ingin menambahkannya
Ini sangat bagus ketika ada kasus misal ingin mem-print Array dengan format yang kita mau misalnya
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/StringJoiner.html

============================================  StringTokenizer Class ============================================
StringTokenizer class adalah class yang bisa digunakan untuk memotong String menjadi token atau string yang lebih kecil
Kita bisa memotong String dengan delimitir yang kita mau
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/StringTokenizer.html

============================================  Number Class ============================================
Semua number class yang bukan primitif memiliki parent class yang sama, yaitu class Number
Class number memiliki banyak method yang bisa digunakan untuk mengkonversi ke tipe number lain
Hal ini memudahkan kita untuk mengkonversi object number dari satu tipe ke tipe numkber lainnya
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/lang/Number.html

## Method di Number Class ##
byte byteValue() => Mengubah menjadi tipe byte
double doubleValue() => Mengubah menjadi tipe double
float floatValue() => Mengubah menjadi tipe float
int intValue() => Mengubah menjadi int value
long longValue() => Mengubah menjadi long value
short shortValue() =>  Mengubah menjadi short value

## Konversi String ke Number ##
Long, Integer, Short, dan Byte memiliki static method untuk melakukan konversi dari String ke number
parseXxx(string) digunakan untuk mengkonversi dari string ke tipe data number primitif
valueOf(string) digunakan untuk mengkonversi dari string ke tipe data number non primitif
Method ini akan throw NumberFormatException jika ternyata gagal melakukan konversi String ke number

============================================  Math Class ============================================
Class Math merupakan class utilities yang berisikan banyak sekali static method untuk operasi numerik, seperti trigonometric, logarithm, akar pangkat, dan lain-lain
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/lang/Math.html

## Method di Math Class ##
double cos(double) => Menghitung cos di trigonometri
double sin(double) => Menghitung sin di trigonometri
double tan(double) => Menghitung tan di trigonometri
min(number 1, number 2) => Mengambil nilai terkecil
max(number 1, number 2) => Mengambil nilai terbesar
.. dan masih banyak lagi lainnya

============================================  BigNumber Class ============================================
Jika kita ada kebutuhan untuk menggunakan angka yang besar sehingga melebihi kapasitas Long dan Double di Java sudah disediakan class untuk handle data besar tersebut
BigInteger adalah class untuk handle tipe data Integer, dan
BigDecimal adalah class untuk handle tipe data floating, dan
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/math/package-summary.html

## Method di BigInteger & BigDecimal ##
add             => +
subtract        => -
multiply        => *
divide          => /
mod             => %
...dan masih banyak lagi

============================================  Scanner Class ============================================
Scanner sebenernya bagian dari Java IO(Input Output), dan ini akan dibahas di materi terpisah
Namun sekarang kita akan bahas sekali tentang class Scanner
Class Scanner hadir sejak Java 5
Class Scanner adalah class yang bisa digunakan untuk membaac input, entah dari file, console, dan lain-lain
Class Scanner ini cocok untuk dijadikan object untuk membaca input user saat kita belajar membuat program Java menggunakan console / termina;
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/Scanner.html

## Method di Scanner Class ##
nextLine()      => Membaca string
nextInt()       => Membaca int
nextLong()      => Membaca long
nextBoolean()   => Membaca boolean
...dan masih banyak

============================================  Date & Calendar ============================================
Tiap bahasa pemrograman biasanya memiliki representasi tanggal, di java juga sama, ada class Date & Calendar yang bisa kita gunakan sebagai representasi tanggal
Sebenarnya di Java 8 sudah ada cara manipulasi tanggal yang baru menggunakan Java Date Time API, namun itu akan kita bahas di course terpisah
Sekarang kita akan fokus menggunakan class Date dan Calendar

## Hubungan Date dan Calendar ##
Class Date adalah class representasi tanggal sampai presisi milisecond
Namun di class Date sudah banyak method - method yang di depercated, sehingga untuk memanipulasi date tanggal, kita sekarang harus melakukan kombinasi antara class Date dan Calendar
Sederhananya Date untuk representasi tanggal, dan Calendar untuk memanipulasi tanggal
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/Date.html
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/Calendar.html

============================================  System Class ============================================
Class System adalah class yang berisikan banyak utility static method di java, contohnya seblumnya kita sudah sering menggunakan method println milik field out di class System
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/lang/System.html

## Method di System Class ##
String getenv(key)      => Mendapatkan environment variable sistem operasi
void exit(status)       => Menghentikan program java\
long currentTimeMilis() => Mendapatkan waktu saat ini dalam milisecond
long nanoTIme()         => Mendapatkan waktu saat ini dalam nanosecond
void gc()               => Menjalankan java garbage collection

============================================  Runtime Class ============================================
Ketika aplikasi Java kita berjalan, kita bisa melihat informasi environment tempat aplikasi java berjalan
Informasi itu terdapat di class Runtime
Class Runtime tidak bisa dibuat, secara otomatis Java akan membuat single object, kita bisa mengakses object tersebut menggunakan static method getRuntime() milik class Runtime
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/lang/Runtime.html

# Method di runtime Class ##
int availableProcessor()       => Mendapatkan jumlah core cpu
long freeMemory()              => Mendapatkan jumlah memory bebas di JVM
long totalMemory()             => Mendapatkan jumlah total memory di JVM
long maxMemory()               => Mendapatkan jumlah maksimum memory di JVM
void gc()                      => Menjalankan garbage collector untuk menghilangkan data di memory yang sudah tidak terpakai

============================================  UUID Class ============================================
Saat membuat aplikasi, kadang kita ada kasus ingin membuat data unique, misal untuk kebutuhan data primary key misalnya
Java menyediakan sebuah class UUID atau singkatan dari University Unique Identifier
UUID adalah format standard untuk membuat unique value yang telah terjamin
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/UUID.html

============================================  Base64 Class ============================================
Sejak Java 8, Java sudah menyediakan class untuk melakukan encoding base64
Buat programmer web pasti tau tentang base64 yaitu encoding yang bisa digunakan untuk mengubah binary data ke text yang aman
Aman disini bukan dari sisi security, tapi aman dari kesalahan parsing
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/Base64.html
https://www.ietf.org/rfc/rfc4648.txt